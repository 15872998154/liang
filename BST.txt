#include<stdio.h>
#include<stdlib.h>
typedef struct node {
	int data;
	struct node *left,*right;
}Node;

typedef struct{
	Node *root; 
}Tree;

void insert(Tree *tree,int value){
	Node *node = (Node *)malloc(sizeof(Node));
	node->data = value;
	node ->left = NULL;
	node ->right =NULL;
	if(tree ->root == NULL){
		tree ->root = node;
	}
	else{
		Node* temp = tree -> root;
		while(temp != NULL){
			if(value < temp ->data ){
				if(temp -> left ==NULL){
					temp->left =node;
					return;
				}
				else{
					temp = temp->left;
				}
			}
			else{
				if(temp -> right==NULL){
					temp->right =node;
					return;
				}
				else{
					temp = temp->right;
				}
			
			}
		}
	}
}

void preOrder(Node *node){
	if(node != NULL){
		
		preOrder(node->left);
		printf("%d ",node -> data);
		preOrder(node->right);
	}
}
int main(){
	int arr[4] ={8,2,3,7};
	Tree tree;
	tree.root = NULL;
	for(int i =0;i<4;i++){
		insert(&tree,arr[i]);
	}
	preOrder(tree.root);
	return 0;
}

